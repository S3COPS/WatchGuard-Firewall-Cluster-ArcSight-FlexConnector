###############################################################################################################
#
# WatchGuard Firebox Parser
# Built with events from Clustered M270 Fireware Version 12.5.2 & Clustered XTM330 Fireware 12.1.3 
# # https://www.watchguard.com/help/docs/fireware/12/en-US/log_catalog/Log-Catalog_v12_6.pdf
# 
# Parser Author: KSQ
# 
# SmartConnector Type: SYSLOG
# Dependencies: ArcSight SmartConnector Framework at least 7.15
#
##### Installation Summary ######
# Copy the fcp, flexagent and acp folders and the contents to the CONNECTOR_HOME/current/user/agent/ folder on the Syslog Connector
# Restart the Syslog Connector
#
#
#### Version Control ####
# Version: 0.1 | Feb 2021 | Initial Release | Author:KSQ
# 
#### Samples: ####
# <187>Feb  5 10:24:17 Member1 54D44350CD7 CLUSTER001 (2021-02-05T10:24:17) sigd[27252]: register failed
# <155>Feb  5 10:42:32 Member1 54D44350CD7 CLUSTER002 (2021-02-05T10:42:32) pxy[3028]: 0x147baa0-10268842 connect failed Connection refused 115: 108.162.217.96:60290 -> 195.224.47.50:53 [A t] {B} | 116: 108.162.217.96:60290 -> 10.1.4.4:53 [!B c] {N}[P]
#
###############################################################################################################
#
do.unparsed.events=true
#
regex=(\\S+)\\s(\\S+)\\s\\((\\d{4}-\\d{2}-\\d{2}T\\d{2}\:\\d{2}\:\\d{2})\\)\\s(firewall|http-proxy|https-proxy|homer|pxy|sigd|dns-proxy)\\[?(\\d+)?\\]?\\\:\\s((?\:msg_id\="([^"]+)"\\s)?(.*))
#
token.count=8
#
token[0].name=SERIAL
token[0].type=String
#
token[1].name=HOSTNAME
token[1].type=String
#
token[2].name=END_TIME
token[2].type=TimeStamp
token[2].format=yyyy-MM-dd'T'HH\:mm\:ss
#
token[3].name=PROCESS
token[3].type=String
#
token[4].name=PROCESS_ID
token[4].type=String
#
token[5].name=FULL_MESSAGE
token[5].type=String
#
token[6].name=MSG_ID
token[6].type=String
#
token[7].name=MESSAGE
token[7].type=String
#
additionaldata.enabled=true
#
# Submessage for this core parser - note, some modules will be parsed by the extraprocessor's instead
submessage.messageid.token=PROCESS
submessage.token=MESSAGE
#
# Vendor Details:
event.deviceVendor=__getVendor("WatchGuard")
event.deviceProduct=__stringConstant("Firebox")
#
# TimeStamps:
event.endTime=END_TIME
#
# Device Details:
event.deviceHostName=HOSTNAME
event.deviceProcessId=__safeToInteger(PROCESS_ID)
event.deviceProcessName=PROCESS
# DeviceEventClassID set to the MSG_ID Field (not always present) - however, to allow for easy lookup on WatchGuard Log Catalogue the hyphen has been removed.
# DCS1 contains the full MSG_ID as contained within the event.
event.deviceEventClassId=__concatenateDeleting(MSG_ID,"-")
#
# DeviceCustom:
event.deviceCustomString1Label=__stringConstant("Message ID")
event.deviceCustomString1=MSG_ID
event.deviceCustomString6Label=__stringConstant("Device Serial Number")
event.deviceCustomString6=SERIAL
#
# For the ExtraProcessor
event.flexString1Label=__stringConstant("MESSAGE")
event.flexString1=FULL_MESSAGE
#
# Mappings for generic events, not parsed by extraProcessor's below - these will be overwritten later where appropriate
event.name=PROCESS
event.message=MESSAGE
#
################################################################################################################
# SubMessages
submessage.count=4
# Process=homer
submessage[0].messageid=homer
submessage[0].pattern.count=2
submessage[0].pattern[0].regex=([^\:]+)\\\:\\s(.*)
submessage[0].pattern[0].fields=event.name,event.message
#
# homer - catch all
submessage[0].pattern[1].regex=(.*)
submessage[0].pattern[1].fields=event.name
#
# Process=sigd
submessage[1].messageid=sigd
submessage[1].pattern.count=1
submessage[1].pattern[0].regex=(.*)
submessage[1].pattern[0].fields=event.name
#
# Process=pxy
submessage[2].messageid=pxy
submessage[2].pattern.count=2
submessage[2].pattern[0].regex=(\\S+)\\s(connect failed)\\s(Connection refused)\\s(\\d+)\:\\s(\\d{1,3}.\\d{1,3}.\\d{1,3}.\\d{1,3})\:(\\d+)\\s->\\s(\\d{1,3}.\\d{1,3}.\\d{1,3}.\\d{1,3})\:(\\d+)..*\\|\\s(\\d+)\:\\s(\\d{1,3}.\\d{1,3}.\\d{1,3}.\\d{1,3})\:(\\d+)\\s->\\s(\\d{1,3}.\\d{1,3}.\\d{1,3}.\\d{1,3})\:(\\d+).*
submessage[2].pattern[0].fields=additionaldata.ErrorCode,event.name,event.reason,additionaldata.HopCount1,event.sourceAddress,event.sourcePort,event.destinationAddress,event.destinationPort,additionaldata.HopCount2,event.sourceTranslatedAddress,event.sourceTranslatedPort,event.destinationTranslatedAddress,event.destinationTranslatedPort
submessage[2].pattern[0].extramappings=event.deviceEventClassId=__stringConstant("connect:fail")
#
submessage[2].pattern[1].regex=(.*)
submessage[2].pattern[1].fields=event.message
submessage[2].pattern[1].extramappings=event.name=__stringConstant(Proxy Event")
#
#
# DEFAULT SUBMESSAGE
submessage[3].pattern.count=1
submessage[3].pattern[0].regex=(.*)
submessage[3].pattern[0].fields=event.message
submessage[3].pattern[0].extramappings=event.name=__stringConstant("Unparsed event")
#
#l10n.filename.prefix=
#
###############################################################################################################
# Extra Processor Settings
# Send FlexString1 to the relevant parser - based on Process Name - i.e. firewall, http-proxy, dns-proxy etc.
extraprocessor.count=2
extraprocessor[0].type=regex
extraprocessor[0].conditionfield=event.deviceProcessName
extraprocessor[0].conditiontype=equals
extraprocessor[0].conditionvalues=firewall
extraprocessor[0].field=event.flexString1
extraprocessor[0].flexagent=true
extraprocessor[0].filename=watchguard/watchguard_firewall
extraprocessor[0].clearfieldafterparsing=false
extraprocessor[0].allowoverwrite=true
#
#
extraprocessor[1].type=map
extraprocessor[1].filename=watchguard/watchguard_map.csv
#
###############################################################################################################
#